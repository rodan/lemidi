!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	//
$(OBJS)	Makefile	/^$(OBJS): $(PROJ).cflags$/;"	t
$(PROJ).cflags	Makefile	/^$(PROJ).cflags: force$/;"	t
$(PROJ).dep	Makefile	/^$(PROJ).dep: $(SRCS)$/;"	t
$(PROJ).elf	Makefile	/^$(PROJ).elf: $(OBJS)$/;"	t
%.o	Makefile	/^%.o: %.c$/;"	t
AR	Makefile	/^AR		= msp430-elf-ar$/;"	m
AS	Makefile	/^AS		= msp430-elf-as$/;"	m
BASH	Makefile	/^BASH := $(shell which bash || which bash)$/;"	m
BUILD	version.h	/^#define BUILD /;"	d
CC	Makefile	/^CC		= msp430-elf-gcc$/;"	m
CC_CMACH	Makefile	/^CC_CMACH	= -mmcu=msp430f5510$/;"	m
CC_DMACH	Makefile	/^CC_DMACH	= -D__MSP430F5510__$/;"	m
COMMIT	version.h	/^#define COMMIT /;"	d
DEBUG	Makefile	/^DEBUG := $(shell grep "^\\#define CONFIG_DEBUG" config.h)$/;"	m
EXIT_FAILURE	proj.h	/^#define EXIT_FAILURE /;"	d
EXIT_SUCCESS	proj.h	/^#define EXIT_SUCCESS /;"	d
LD	Makefile	/^LD		= msp430-elf-ld$/;"	m
LDFLAGS	Makefile	/^LDFLAGS		= -lm$/;"	m
LED_OFF	proj.h	/^    #define LED_OFF /;"	d
LED_ON	proj.h	/^    #define LED_ON /;"	d
LED_SWITCH	proj.h	/^    #define LED_SWITCH /;"	d
MAX3421_CS_DESELECT	proj.h	/^#define MAX3421_CS_DESELECT /;"	d
MAX3421_CS_SELECT	proj.h	/^#define MAX3421_CS_SELECT /;"	d
MAX3421_READ	drivers/max3421.h	/^#define MAX3421_READ /;"	d
MAX3421_WRITE	drivers/max3421.h	/^#define MAX3421_WRITE /;"	d
MCP42XXX_CS_OUT	drivers/mcp42xxx.h	/^static const uint16_t MCP42XXX_CS_OUT[6] = { 0x223, 0x222 };$/;"	v	typeref:typename:const uint16_t[6]
MCP42XXX_CS_PORT	drivers/mcp42xxx.h	/^static const uint8_t MCP42XXX_CS_PORT[6] = { BIT7, BIT6 };$/;"	v	typeref:typename:const uint8_t[6]
MCP42XXX_SHUTDOWN	drivers/mcp42xxx.h	/^#define MCP42XXX_SHUTDOWN /;"	d
MCP42XXX_WRITE_DATA	drivers/mcp42xxx.h	/^#define MCP42XXX_WRITE_DATA /;"	d
MSP430F5510_DEVBOARD	config.h	/^#define MSP430F5510_DEVBOARD$/;"	d
OBJS	Makefile	/^OBJS := $(patsubst %.c,%.o,$(SRCS))$/;"	m
PI	drivers/helper.h	/^#define PI /;"	d
PIBY2_FLOAT	drivers/helper.h	/^#define PIBY2_FLOAT /;"	d
PI_FLOAT	drivers/helper.h	/^#define PI_FLOAT /;"	d
PREC	drivers/helper.h	/^#define PREC /;"	d
PROJ	Makefile	/^PROJ = proj$/;"	m
Port1_ISR	proj.c	/^void Port1_ISR(void)$/;"	f	typeref:typename:void
SPI_CLK	drivers/spi.c	/^#define SPI_CLK /;"	d	file:
SPI_DIR	drivers/spi.c	/^#define SPI_DIR /;"	d	file:
SPI_OUT	drivers/spi.c	/^#define SPI_OUT /;"	d	file:
SPI_REN	drivers/spi.c	/^#define SPI_REN /;"	d	file:
SPI_SEL	drivers/spi.c	/^#define SPI_SEL /;"	d	file:
SPI_SIMO	drivers/spi.c	/^#define SPI_SIMO /;"	d	file:
SRCS	Makefile	/^SRCS := $(wildcard *.c)$/;"	m
STR_LEN	proj.h	/^#define STR_LEN /;"	d
SUBDIRS	Makefile	/^SUBDIRS = drivers$/;"	m
SYS_MSG_P1IFG_GPX	drivers/sys_messagebus.h	/^    SYS_MSG_P1IFG_GPX = BITD,   \/\/ port1 interrupt$/;"	e	enum:sys_message
SYS_MSG_P1IFG_INT	drivers/sys_messagebus.h	/^    SYS_MSG_P1IFG_INT = BITE,   \/\/ port1 interrupt$/;"	e	enum:sys_message
SYS_MSG_RTC_SECOND	drivers/sys_messagebus.h	/^    SYS_MSG_RTC_SECOND = BITF,  \/\/ second event from the hardware RTC$/;"	e	enum:sys_message
SYS_MSG_TIMER0_CRR0	drivers/sys_messagebus.h	/^    SYS_MSG_TIMER0_CRR0 = BIT0,$/;"	e	enum:sys_message
SYS_MSG_TIMER0_CRR1	drivers/sys_messagebus.h	/^    SYS_MSG_TIMER0_CRR1 = BIT1, \/\/ timer_a0_delay_noblk_ccr1$/;"	e	enum:sys_message
SYS_MSG_TIMER0_CRR2	drivers/sys_messagebus.h	/^    SYS_MSG_TIMER0_CRR2 = BIT2, \/\/ timer_a0_delay_noblk_ccr2$/;"	e	enum:sys_message
SYS_MSG_TIMER0_CRR3	drivers/sys_messagebus.h	/^    SYS_MSG_TIMER0_CRR3 = BIT3, \/\/ timer_a0_delay_noblk_ccr3$/;"	e	enum:sys_message
SYS_MSG_TIMER0_CRR4	drivers/sys_messagebus.h	/^    SYS_MSG_TIMER0_CRR4 = BIT4,$/;"	e	enum:sys_message
SYS_MSG_TIMER0_IFG	drivers/sys_messagebus.h	/^    SYS_MSG_TIMER0_IFG = BIT5,  \/\/ timer_a0 overflow$/;"	e	enum:sys_message
SYS_MSG_UART0_RX	drivers/sys_messagebus.h	/^    SYS_MSG_UART0_RX = BITA,$/;"	e	enum:sys_message
TARGET	Makefile	/^TARGET	:= DEBUG$/;"	m
TARGET	Makefile	/^TARGET	:= RELEASE$/;"	m
TIMER_A0_EVENT_CCR0	drivers/timer_a0.h	/^    TIMER_A0_EVENT_CCR0 = BIT0,$/;"	e	enum:timer_a0_event
TIMER_A0_EVENT_CCR1	drivers/timer_a0.h	/^    TIMER_A0_EVENT_CCR1 = BIT1,$/;"	e	enum:timer_a0_event
TIMER_A0_EVENT_CCR2	drivers/timer_a0.h	/^    TIMER_A0_EVENT_CCR2 = BIT2,$/;"	e	enum:timer_a0_event
TIMER_A0_EVENT_CCR3	drivers/timer_a0.h	/^    TIMER_A0_EVENT_CCR3 = BIT3,$/;"	e	enum:timer_a0_event
TIMER_A0_EVENT_CCR4	drivers/timer_a0.h	/^    TIMER_A0_EVENT_CCR4 = BIT4,$/;"	e	enum:timer_a0_event
TIMER_A0_EVENT_IFG	drivers/timer_a0.h	/^    TIMER_A0_EVENT_IFG = BIT5,$/;"	e	enum:timer_a0_event
TRIG0	proj.h	/^#define TRIG0 /;"	d
TRIG1	proj.h	/^#define TRIG1 /;"	d
UART0_EV_RX	drivers/uart0.h	/^    UART0_EV_RX = BIT0,$/;"	e	enum:uart0_tevent
UART0_EV_TX	drivers/uart0.h	/^    UART0_EV_TX = BIT1$/;"	e	enum:uart0_tevent
UART0_RXBUF_SZ	drivers/uart0.h	/^#define UART0_RXBUF_SZ /;"	d
USCI_A0_ISR	drivers/uart0.c	/^void USCI_A0_ISR(void)$/;"	f	typeref:typename:void
USE_WATCHDOG	config.h	/^#define USE_WATCHDOG$/;"	d
USE_XT2	config.h	/^#define USE_XT2$/;"	d
_10ms	drivers/timer_a0.h	/^#define _10ms /;"	d
_10s	drivers/timer_a0.h	/^#define _10s /;"	d
_10sp	drivers/timer_a0.h	/^#define _10sp /;"	d
_1200ms	drivers/timer_a0.h	/^#define _1200ms /;"	d
_14s	drivers/timer_a0.h	/^#define _14s /;"	d
_1s	drivers/timer_a0.h	/^#define _1s /;"	d
_2s	drivers/timer_a0.h	/^#define _2s /;"	d
_30s	drivers/timer_a0.h	/^#define _30s /;"	d
_3s	drivers/timer_a0.h	/^#define _3s /;"	d
_3sp	drivers/timer_a0.h	/^#define _3sp /;"	d
_500ms	drivers/timer_a0.h	/^#define _500ms /;"	d
_5s	drivers/timer_a0.h	/^#define _5s /;"	d
_5sp	drivers/timer_a0.h	/^#define _5sp /;"	d
_60s	drivers/timer_a0.h	/^#define _60s /;"	d
_6s	drivers/timer_a0.h	/^#define _6s /;"	d
_6sp	drivers/timer_a0.h	/^#define _6sp /;"	d
_75s	drivers/timer_a0.h	/^#define _75s /;"	d
_CONFIG_H_	config.h	/^#define _CONFIG_H_$/;"	d
__HELPER_H__	drivers/helper.h	/^#define __HELPER_H__$/;"	d
__MAX3421_H__	drivers/max3421.h	/^#define __MAX3421_H__$/;"	d
__MCP42XXX_H__	drivers/mcp42xxx.h	/^#define __MCP42XXX_H__$/;"	d
__PROJ_H__	proj.h	/^#define __PROJ_H__$/;"	d
__QA_H__	qa.h	/^#define __QA_H__$/;"	d
__SPI_H__	drivers/spi.h	/^#define __SPI_H__$/;"	d
__SYS_MESSAGEBUS_H__	drivers/sys_messagebus.h	/^#define __SYS_MESSAGEBUS_H__$/;"	d
__TIMER_A0_H__	drivers/timer_a0.h	/^#define __TIMER_A0_H__$/;"	d
__UART0_H__	drivers/uart0.h	/^#define __UART0_H__$/;"	d
__VERSION_H__	version.h	/^#define __VERSION_H__$/;"	d
_atan2f	drivers/helper.c	/^float _atan2f(const float y, const float x)$/;"	f	typeref:typename:float
_cos	drivers/helper.c	/^float _cos(const float x)$/;"	f	typeref:typename:float
_sin	drivers/helper.c	/^float _sin(const float x)$/;"	f	typeref:typename:float
_sqrt	drivers/helper.c	/^float _sqrt(const float number)$/;"	f	typeref:typename:float
address	tools/msp430-ram-usage	/^address = objs['__stack'][0]$/;"	v
all	Makefile	/^all: depend config.h tags $(PROJ).elf$/;"	t
check_events	proj.c	/^void check_events(void)$/;"	f	typeref:typename:void
clean	Makefile	/^clean: $(SUBDIRS)$/;"	t
config.h	Makefile	/^config.h:$/;"	t
depend	Makefile	/^depend: $(PROJ).dep$/;"	t
desc	tools/msp430-ram-usage	/^                desc = '%s | %s' % (mmap[address+x], desc)$/;"	v
desc	tools/msp430-ram-usage	/^                desc = '%s%s (%d)' % ($/;"	v
desc	tools/msp430-ram-usage	/^                desc = '%s%s' % ($/;"	v
display_menu	qa.c	/^void display_menu(void)$/;"	f	typeref:typename:void
doc	Makefile	/^doc:$/;"	t
false	proj.h	/^#define false /;"	d
fn	drivers/sys_messagebus.h	/^    void (*fn) (enum sys_message);$/;"	m	struct:sys_messagebus	typeref:typename:void (*)(enum sys_message)
free	tools/msp430-ram-usage	/^free = 0$/;"	v
install	Makefile	/^install: $(PROJ).elf$/;"	t
listens	drivers/sys_messagebus.h	/^    enum sys_message listens;$/;"	m	struct:sys_messagebus	typeref:enum:sys_message
m	tools/msp430-ram-usage	/^    m = re_obj.search(line)$/;"	v
main	proj.c	/^int main(void)$/;"	f	typeref:typename:int
main_init	proj.c	/^void main_init(void)$/;"	f	typeref:typename:void
max3421_write	drivers/max3421.c	/^void max3421_write(const uint8_t reg, const uint8_t val)$/;"	f	typeref:typename:void
mcp42_set_pot	drivers/mcp42xxx.c	/^void mcp42_set_pot(const uint8_t mcp42_id, const uint8_t pot_ch0_val, const uint8_t pot_ch1_val)$/;"	f	typeref:typename:void
mcp42_set_pot_ch	drivers/mcp42xxx.c	/^void mcp42_set_pot_ch(const uint8_t mcp42_id, const uint8_t pot_id,$/;"	f	typeref:typename:void
mcp42_shutdown_pot	drivers/mcp42xxx.c	/^void mcp42_shutdown_pot(const uint8_t mcp42_id, const uint8_t pot_id)$/;"	f	typeref:typename:void
messagebus	drivers/sys_messagebus.h	/^struct sys_messagebus *messagebus;$/;"	v	typeref:struct:sys_messagebus *
mmap	tools/msp430-ram-usage	/^mmap = {}$/;"	v
modinit.c	Makefile	/^modinit.c:$/;"	t
modinit.o	Makefile	/^modinit.o: modinit.c$/;"	t
name	tools/msp430-ram-usage	/^        name = ' -'*20$/;"	v
name	tools/msp430-ram-usage	/^        name = mmap[address]$/;"	v
next	drivers/sys_messagebus.h	/^    struct sys_messagebus *next;$/;"	m	struct:sys_messagebus	typeref:struct:sys_messagebus *
objs	tools/msp430-ram-usage	/^objs = {}$/;"	v
parse_UI	proj.c	/^static void parse_UI(enum sys_message msg)$/;"	f	typeref:typename:void	file:
parse_user_input	qa.c	/^void parse_user_input(void)$/;"	f	typeref:typename:void
parser	tools/msp430-ram-usage	/^parser = OptionParser()$/;"	v
port1_gpx_irq	proj.c	/^static void port1_gpx_irq(enum sys_message msg)$/;"	f	typeref:typename:void	file:
port1_ifg_gpx_last_event	proj.c	/^volatile uint8_t port1_ifg_gpx_last_event;$/;"	v	typeref:typename:volatile uint8_t
port1_ifg_int_last_event	proj.c	/^volatile uint8_t port1_ifg_int_last_event;$/;"	v	typeref:typename:volatile uint8_t
port1_int_irq	proj.c	/^static void port1_int_irq(enum sys_message msg)$/;"	f	typeref:typename:void	file:
radians	drivers/helper.c	/^float radians(const float x)$/;"	f	typeref:typename:float
re_obj	tools/msp430-ram-usage	/^re_obj = re.compile(r':[ \\t]+([0-9a-f]+)[ \\t]+([0-9a-f]+)[ \\t]+(\\w+)[ \\t]+.* (.*)$')$/;"	v
size	tools/msp430-ram-usage	/^size = objs['__stack'][0] - objs['__data_start'][0]$/;"	v
spi_end	drivers/spi.c	/^void spi_end(void)$/;"	f	typeref:typename:void
spi_fast_mode	drivers/spi.c	/^void spi_fast_mode(void)$/;"	f	typeref:typename:void
spi_init	drivers/spi.c	/^void spi_init(void)$/;"	f	typeref:typename:void
spi_read_frame	drivers/spi.c	/^void spi_read_frame(uint8_t * pBuffer, uint16_t size)$/;"	f	typeref:typename:void
spi_send_frame	drivers/spi.c	/^void spi_send_frame(uint8_t * pBuffer, uint16_t size)$/;"	f	typeref:typename:void
sq	drivers/helper.c	/^float sq(const float x)$/;"	f	typeref:typename:float
stackmem	tools/msp430-ram-usage	/^stackmem = 0$/;"	v
str_temp	proj.h	/^char str_temp[STR_LEN];$/;"	v	typeref:typename:char[]
str_to_uint16	drivers/helper.c	/^uint8_t str_to_uint16(char *str, uint16_t * out, const uint8_t seek,$/;"	f	typeref:typename:uint8_t
str_to_uint32	drivers/helper.c	/^uint8_t str_to_uint32(char *str, uint32_t * out, const uint8_t seek,$/;"	f	typeref:typename:uint8_t
strip_zero	tools/update_rtca_now.sh	/^strip_zero()$/;"	f
syms	tools/msp430-ram-usage	/^syms = os.popen('msp430-readelf -a -W "%s"' % args[0])$/;"	v
sys_message	drivers/sys_messagebus.h	/^enum sys_message {$/;"	g
sys_messagebus	drivers/sys_messagebus.h	/^struct sys_messagebus {$/;"	s
sys_messagebus_register	drivers/sys_messagebus.c	/^void sys_messagebus_register(void (*callback) (enum sys_message),$/;"	f	typeref:typename:void
sys_messagebus_unregister	drivers/sys_messagebus.c	/^void sys_messagebus_unregister(void (*callback) (enum sys_message))$/;"	f	typeref:typename:void
tags	Makefile	/^tags: $(SRCS)$/;"	t
timer0_A1_ISR	drivers/timer_a0.c	/^void timer0_A1_ISR(void)$/;"	f	typeref:typename:void
timer_a0_delay_noblk_ccr1	drivers/timer_a0.c	/^void timer_a0_delay_noblk_ccr1(uint16_t ticks)$/;"	f	typeref:typename:void
timer_a0_delay_noblk_ccr2	drivers/timer_a0.c	/^void timer_a0_delay_noblk_ccr2(uint16_t ticks)$/;"	f	typeref:typename:void
timer_a0_delay_noblk_ccr3	drivers/timer_a0.c	/^void timer_a0_delay_noblk_ccr3(uint16_t ticks)$/;"	f	typeref:typename:void
timer_a0_event	drivers/timer_a0.h	/^enum timer_a0_event {$/;"	g
timer_a0_init	drivers/timer_a0.c	/^void timer_a0_init(void)$/;"	f	typeref:typename:void
timer_a0_last_event	drivers/timer_a0.h	/^volatile enum timer_a0_event timer_a0_last_event;$/;"	v	typeref:typename:volatile enum timer_a0_event
timer_a0_ovf	drivers/timer_a0.h	/^volatile uint16_t timer_a0_ovf;$/;"	v	typeref:typename:volatile uint16_t
timer_a0_ovf_irq	proj.c	/^static void timer_a0_ovf_irq(enum sys_message msg)$/;"	f	typeref:typename:void	file:
true	proj.h	/^#define true /;"	d
uart0_init	drivers/uart0.c	/^void uart0_init(void)$/;"	f	typeref:typename:void
uart0_last_event	drivers/uart0.h	/^volatile enum uart0_tevent uart0_last_event;$/;"	v	typeref:typename:volatile enum uart0_tevent
uart0_p	drivers/uart0.h	/^volatile uint8_t uart0_p;$/;"	v	typeref:typename:volatile uint8_t
uart0_rx_buf	drivers/uart0.h	/^volatile char uart0_rx_buf[UART0_RXBUF_SZ];$/;"	v	typeref:typename:volatile char[]
uart0_rx_enable	drivers/uart0.h	/^volatile uint8_t uart0_rx_enable;$/;"	v	typeref:typename:volatile uint8_t
uart0_tevent	drivers/uart0.h	/^enum uart0_tevent {$/;"	g
uart0_tx_str	drivers/uart0.c	/^uint16_t uart0_tx_str(char *str, const uint16_t size)$/;"	f	typeref:typename:uint16_t
