#!/usr/bin/env python
#
# make-VIDs.py : a modified Python-script from Wireshark.
#   http://www.wireshark.org/
#
# Creates the UHS_VIDs.h file containing vendor and
# product ids. It uses the database at
#   http://www.linux-usb.org/usb.ids
#
# Modified in 2014 by Andrew J. Kroll for Circuits At Home, LTD. All rights reserved.
#
# Original code was...
# Changed by G. Vanem <gvanem@yahoo.no> 2012.
#

#
# Notes.
# Lines of interest in the database.
# These will be all used later to generate different headers.
#
#  "# Vendors, devices and interfaces. Please keep sorted."
#  "# List of known device classes, subclasses and protocols"
#  "# List of Audio Class Terminal Types"
#  "# List of HID Descriptor Types"
#  "# List of HID Descriptor Item Types"
#  "# List of Physical Descriptor Bias Types"
#  "# List of Physical Descriptor Item Types"
#  "# List of HID Usages"
#  "# List of Languages"
#  "# HID Descriptor bCountryCode"
#  "# List of Video Class Terminal Types"
#


import sys, re

if sys.version_info[0] < 3:
        import urllib
else:
        import urllib.request, urllib.error, urllib.parse

MODE_NONE           = 0
MODE_VID            = 1
STR_MODE_VID        = "# Vendors, devices and interfaces. Please keep sorted."
MODE_C              = 2
STR_MODE_C          = "# List of known device classes, subclasses and protocols"
MODE_AT             = 3
STR_MODE_AT         = "# List of Audio Class Terminal Types"
MODE_HID            = 4
STR_MODE_HID        = "# List of HID Descriptor Types"
MODE_R              = 5
STR_MODE_R          = "# List of HID Descriptor Item Types"
MODE_BIAS           = 6
STR_MODE_BIAS       = "# List of Physical Descriptor Bias Types"
MODE_PHY            = 7
STR_MODE_PHY        = "# List of Physical Descriptor Item Types"
MODE_HUT            = 8
STR_MODE_HUT        = "# List of HID Usages"
MODE_L              = 9
STR_MODE_L          = "# List of Languages"
MODE_HCC            = 10
STR_MODE_HCC        = "# HID Descriptor bCountryCode"
MODE_VT             = 11
STR_MODE_VT         = "# List of Video Class Terminal Types"

mode = MODE_NONE
MODE_DICT = { STR_MODE_VID: MODE_VID, STR_MODE_C: MODE_C, STR_MODE_AT: MODE_AT, STR_MODE_HID: MODE_HID, STR_MODE_R: MODE_R, STR_MODE_BIAS: MODE_BIAS, STR_MODE_PHY: MODE_PHY, STR_MODE_HUT: MODE_HUT, STR_MODE_L: MODE_L, STR_MODE_HCC: MODE_HCC, STR_MODE_VT: MODE_VT }

# Grab from linux-usb.org
if sys.version_info[0] < 3:
        response = urllib.urlopen('http://www.linux-usb.org/usb.ids')
else:
        response = urllib.request.urlopen('http://www.linux-usb.org/usb.ids')

lines = response.read().splitlines()

vendors  = dict()
vnames = dict()
vrenames = dict()

vendors_str  = "\n"

for line in lines:
        line = line.rstrip()

        if line in MODE_DICT:
                mode = MODE_DICT[line]
                continue

        if mode == MODE_VID:
                if re.match("^[0-9a-f]{4} ", line):
                        last_vendor = line[:4]
                        vendors[last_vendor] = re.sub ("\"", "\\\"", re.sub("\?+", "?", repr(line[4:].strip())[1:-1].replace("\\", "\\\\")))

for v in sorted(vendors):
        vnames[v] = re.sub("[\\[\\]]","_",re.sub("\\[HEX\\]","", re.sub("\\?", "_UNKNOWN", re.sub("[\\+ -]","_", re.sub(" $","",re.sub("  "," ",re.sub("&", "AND", re.sub("[,.)('\\/]","",vendors[v]))))))))
        vnames[v] = re.sub("_AB$", "", re.sub("_GMBH$","", re.sub("_SA$","", re.sub("_LLC$", "", re.sub("_INC$","",re.sub("_LTD$","",re.sub("_CO$","",re.sub("_CORP$", "", vnames[v].upper()))))))))
        vnames[v] = re.sub("@", "A", re.sub("__", "_", re.sub("_AB$", "", re.sub("_GMBH$","",re.sub("_SA$","",re.sub("_LLC$", "", re.sub("_INC$","",re.sub("_LTD$","",re.sub("_CO$","",re.sub("_CORP$", "", vnames[v]))))))))))

for v in sorted(vnames):
        if vnames[v] in vrenames:
                vrenames[vnames[v]].append(v)
        else:
                vrenames[vnames[v]] = [v]

for v in sorted(vrenames):
        x = 0
        for k in sorted(vrenames[v]):
                vnames[k] = v + "_" + str(x)
                x += 1

for v in sorted(vendors):
        vnames[v] = re.sub("_0$", "", vnames[v])

for v in sorted(vendors):
        vendors_str += "#define UHS_VID_%s 0x%sU // %s\n" % (vnames[v], v, vendors[v])


header = """/*
 * USB vendor ids
 * This file was generated by running python ./make-USB_IDs.py > UHS_USB_IDs.h
 * Don't change it directly.
 *
 * Copyright 2014, Andrew J. Kroll for Circuits At Home, LTD. All rights reserved.
 *
 * Copyright 2012, Michal Labedzki for Tieto Corporation
 * Other values imported from libghoto2/camlibs/ptp2/library.c, music-players.h
 * Copyright (C) 2001-2005 Mariusz Woloszyn <emsi@ipartners.pl>
 * Copyright (C) 2003-2013 Marcus Meissner <marcus@jet.franken.de>
 * Copyright (C) 2005 Hubert Figuiere <hfiguiere@teaser.fr>
 * Copyright (C) 2009 Axel Waggershauser <awagger@web.de>
 * Copyright (C) 2005-2007 Richard A. Low <richard@wentnet.com>
 * Copyright (C) 2005-2012 Linus Walleij <triad@df.lth.se>
 * Copyright (C) 2007 Ted Bullock
 * Copyright (C) 2012 Sony Mobile Communications AB
 *
 * Wireshark - Network traffic analyzer
 * By Gerald Combs <gerald@wireshark.org>
 * Copyright 1998 Gerald Combs
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 */
#ifndef _UHS_USB_IDs_h_
#define _UHS_USB_IDs_h_
#include "UHS_UNOFFICIAL_IDs.h"
"""
footer = """
#endif

"""
print (header + vendors_str + footer)
